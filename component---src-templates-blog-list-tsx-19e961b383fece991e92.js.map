{"version":3,"sources":["webpack:///./src/templates/blog-list.tsx","webpack:///./src/components/PostCardMinimal/postCardMinimal.style.tsx","webpack:///./src/components/PostCardMinimal/postCardMinimal.tsx","webpack:///./src/components/Pagination/pagination.style.tsx","webpack:///./src/components/Pagination/pagination.tsx"],"names":["BlogList","props","Posts","data","allMarkdownRemark","edges","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","PrevLink","NextLink","title","map","node","key","fields","slug","frontmatter","image","cover","childImageSharp","fluid","url","description","excerpt","date","tags","prevLink","nextLink","totalPage","pageQuery","PostCardWrapper","styled","div","PostPreview","PostDetails","PostDate","themeGet","PostContent","PostTitle","h2","Excerpt","p","PostTags","PostDateAndPreview","ReadMore","PostCardMinimal","className","imageType","addAllClasses","push","join","dangerouslySetInnerHTML","__html","to","alt","fixed","tag","index","defaultProps","PaginationWrapper","PrevPage","NextPage","PageNumber","Pagination","aria-label"],"mappings":"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","file":"component---src-templates-blog-list-tsx-19e961b383fece991e92.js","sourcesContent":["import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport PostCardMinimal from \"../components/PostCardMinimal/postCardMinimal\"\r\nimport Pagination from \"../components/Pagination/pagination\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { BlogPostsWrapper } from \"./templates.style\"\r\n\r\nconst BlogList = (props: any) => {\r\n  const { data } = props\r\n  const Posts = data.allMarkdownRemark.edges\r\n  const { currentPage, numPages } = props.pageContext\r\n  const isFirst = currentPage === 1\r\n  const isLast = currentPage === numPages\r\n  const prevPage =\r\n    currentPage - 1 === 1 ? \"/page/1\" : `/page/${(currentPage - 1).toString()}`\r\n  const nextPage = `/page/${(currentPage + 1).toString()}`\r\n  const PrevLink = !isFirst && prevPage\r\n  const NextLink = !isLast && nextPage\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={`Page ${currentPage}`} />\r\n\r\n      <BlogPostsWrapper>\r\n        {Posts.map(({ node }: any) => {\r\n          return (\r\n            <PostCardMinimal\r\n              key={node.fields.slug}\r\n              title={node.frontmatter.title || node.fields.slug}\r\n              image={\r\n                node.frontmatter.cover == null\r\n                  ? null\r\n                  : node.frontmatter.cover.childImageSharp.fluid\r\n              }\r\n              url={node.fields.slug}\r\n              description={node.frontmatter.description || node.excerpt}\r\n              date={node.frontmatter.date}\r\n              tags={node.frontmatter.tags}\r\n            />\r\n          )\r\n        })}\r\n\r\n        <Pagination\r\n          prevLink={PrevLink}\r\n          nextLink={NextLink}\r\n          currentPage={`${currentPage}`}\r\n          totalPage={`${numPages}`}\r\n        />\r\n      </BlogPostsWrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogList\r\n\r\nexport const pageQuery = graphql`\r\n  query($skip: Int!, $limit: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    sitePage {\r\n      path\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 300)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"DD [<span>] MMMM [</span>]\")\r\n            title\r\n            description\r\n            tags\r\n            cover {\r\n              childImageSharp {\r\n                fluid(maxWidth: 170, maxHeight: 170, quality: 90) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\nimport { themeGet } from \"styled-system\"\r\n\r\nexport const PostCardWrapper = styled.div`\r\n  position: relative;\r\n  &:hover {\r\n    .post_preview {\r\n      transform: translateY(0);\r\n    }\r\n    .post_date {\r\n      transform: translateY(100%);\r\n    }\r\n  }\r\n`\r\n\r\nexport const PostPreview = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  transform: translateY(-100%);\r\n  transition: 0.35s ease-in-out;\r\n  img {\r\n    border-radius: 3px;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    transform: translateY(0);\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-bottom: 30px;\r\n    width: auto;\r\n    height: auto;\r\n    position: relative;\r\n    transform: translateY(0);\r\n  }\r\n`\r\n\r\nexport const PostDetails = styled.div`\r\n  display: flex;\r\n  @media (max-width: 575px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\n\r\nexport const PostDate = styled.div`\r\n  font-size: 90px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  line-height: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  transition: 0.35s ease-in-out;\r\n  @media (max-width: 1200px) {\r\n    font-size: 70px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    font-size: 56px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    display: none;\r\n  }\r\n\r\n  > span {\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    display: block;\r\n    margin-top: 12px;\r\n    text-transform: uppercase;\r\n  }\r\n`\r\n\r\nexport const PostContent = styled.div`\r\n  align-self: center;\r\n`\r\n\r\nexport const PostTitle = styled.h2`\r\n  font-size: 21px;\r\n  font-weight: 700;\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  line-height: 1.53;\r\n  margin-bottom: 10px;\r\n  font-family: \"Fira Sans\", sans-serif;\r\n  a {\r\n    color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  }\r\n  @media (max-width: 1200px) {\r\n    font-size: 21px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    font-size: 19px;\r\n    margin-bottom: 12px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 17px;\r\n    margin-bottom: 10px;\r\n  }\r\n`\r\n\r\nexport const Excerpt = styled.p`\r\n  font-size: ${themeGet(\"fontSizes.3\", \"15\")}px;\r\n  color: ${themeGet(\"textColor\", \"#292929\")};\r\n  font-weight: 400;\r\n  line-height: 2;\r\n  margin-bottom: 0;\r\n  @media (max-width: 990px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n\r\n  a {\r\n    display: block;\r\n    margin-right: 30px;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: ${themeGet(\"primary\", \"#D10068\")};\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const PostDateAndPreview = styled.div`\r\n  position: relative;\r\n  margin-right: 45px;\r\n  flex-shrink: 0;\r\n  overflow: hidden;\r\n  height: 170px;\r\n  width: 170px;\r\n  @media (max-width: 1200px) {\r\n    margin-right: 35px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    margin-right: 25px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    height: auto;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nexport const ReadMore = styled.div`\r\n  margin-top: 16px;\r\n  a {\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    color: ${themeGet(\"textColor\", \"#292929\")};\r\n    transition: 0.15s ease-in-out;\r\n    &:hover {\r\n      color: ${themeGet(\"primary\", \"#D10068\")};\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport _ from \"lodash\"\r\nimport Img from \"gatsby-image\"\r\nimport {\r\n  PostCardWrapper,\r\n  PostPreview,\r\n  PostDetails,\r\n  PostDate,\r\n  PostTitle,\r\n  Excerpt,\r\n  PostContent,\r\n  PostTags,\r\n  PostDateAndPreview,\r\n  ReadMore,\r\n} from \"./postCardMinimal.style\"\r\n\r\ninterface PostCardMinimalProps {\r\n  image?: any\r\n  title: string\r\n  description?: string\r\n  url: string\r\n  date?: string\r\n  tags?: []\r\n  className?: string\r\n  imageType?: \"fixed\" | \"fluid\"\r\n}\r\n\r\nconst PostCardMinimal: React.FunctionComponent<PostCardMinimalProps> = ({\r\n  image,\r\n  title,\r\n  description,\r\n  url,\r\n  date,\r\n  tags,\r\n  className,\r\n  imageType,\r\n  ...props\r\n}) => {\r\n  // Add all classs to an array\r\n  const addAllClasses = [\"post_card\"]\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className)\r\n  }\r\n\r\n  return (\r\n    <PostCardWrapper className={addAllClasses.join(\" \")} {...props}>\r\n      <PostDetails className=\"post_details\">\r\n        <PostDateAndPreview>\r\n          {date && (\r\n            <PostDate\r\n              dangerouslySetInnerHTML={{\r\n                __html: date,\r\n              }}\r\n              className=\"post_date\"\r\n            />\r\n          )}\r\n          {image == null ? null : (\r\n            <PostPreview className=\"post_preview\">\r\n              <Link to={url}>\r\n                {imageType === \"fluid\" ? (\r\n                  <Img fluid={image} alt=\"post preview\" />\r\n                ) : (\r\n                  <Img fixed={image} alt=\"post preview\" />\r\n                )}\r\n              </Link>\r\n            </PostPreview>\r\n          )}\r\n        </PostDateAndPreview>\r\n\r\n        <PostContent className=\"post_content\">\r\n          {tags == null ? null : (\r\n            <PostTags className=\"post_tags\">\r\n              {tags.map((tag: string, index: number) => (\r\n                <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\r\n                  {`#${tag}`}\r\n                </Link>\r\n              ))}\r\n            </PostTags>\r\n          )}\r\n          <PostTitle className=\"post_title\">\r\n            <Link to={url}>{title}</Link>\r\n          </PostTitle>\r\n          {description && (\r\n            <Excerpt\r\n              dangerouslySetInnerHTML={{\r\n                __html: description,\r\n              }}\r\n              className=\"excerpt\"\r\n            />\r\n          )}\r\n          <ReadMore>\r\n            <Link to={url}>Read More</Link>\r\n          </ReadMore>\r\n        </PostContent>\r\n      </PostDetails>\r\n    </PostCardWrapper>\r\n  )\r\n}\r\n\r\nPostCardMinimal.defaultProps = {\r\n  imageType: \"fluid\",\r\n}\r\n\r\nexport default PostCardMinimal\r\n","import styled from 'styled-components';\r\nimport { themeGet } from 'styled-system';\r\n\r\nexport const PaginationWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const PrevPage = styled.div`\r\n  min-width: 32px;\r\n  a {\r\n    width: 32px;\r\n    height: 32px;\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n    border-radius: 50%;\r\n    background-color: #f3f3f3;\r\n    font-size: 18px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.15s ease-in-out;\r\n    svg {\r\n      display: block;\r\n    }\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: ${themeGet('colors.primary', '#D10068')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NextPage = styled.div`\r\n  min-width: 32px;\r\n  a {\r\n    width: 32px;\r\n    height: 32px;\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n    border-radius: 50%;\r\n    background-color: #f3f3f3;\r\n    font-size: 18px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.15s ease-in-out;\r\n    svg {\r\n      display: block;\r\n    }\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: ${themeGet('colors.primary', '#D10068')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PageNumber = styled.div``;\r\n","import * as React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward } from 'react-icons/io';\r\nimport {\r\n  PaginationWrapper,\r\n  PrevPage,\r\n  NextPage,\r\n  PageNumber,\r\n} from './pagination.style';\r\n\r\ntype PaginationProps = {\r\n  prevLink?: string | undefined | null | boolean;\r\n  nextLink?: string | undefined | null | boolean;\r\n  currentPage: string;\r\n  totalPage: string;\r\n  className?: string;\r\n};\r\n\r\nconst Pagination: React.FunctionComponent<PaginationProps> = ({\r\n  prevLink,\r\n  nextLink,\r\n  currentPage,\r\n  totalPage,\r\n  className,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <PaginationWrapper {...props} className={className}>\r\n      <PrevPage>\r\n        {prevLink && (\r\n          <Link to={`${prevLink}`} aria-label=\"Prev\">\r\n            <IoMdArrowRoundBack />\r\n          </Link>\r\n        )}\r\n      </PrevPage>\r\n\r\n      <PageNumber>{`Page ${currentPage} Of ${totalPage}`}</PageNumber>\r\n\r\n      <NextPage>\r\n        {nextLink && (\r\n          <Link to={`${nextLink}`} aria-label=\"Next\">\r\n            <IoMdArrowRoundForward />\r\n          </Link>\r\n        )}\r\n      </NextPage>\r\n    </PaginationWrapper>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"],"sourceRoot":""}